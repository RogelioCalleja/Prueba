{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/ROGE-/ecomerce1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from \"../environments/environment\";\nimport * as i0 from \"@angular/core\";\nexport let HttpService = /*#__PURE__*/(() => {\n  class HttpService {\n    constructor() {\n      this.rutaServidor = environment.baseUrl;\n    }\n    post(ruta, payload) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const respuestaRaw = yield fetch(_this.rutaServidor + ruta, {\n          body: JSON.stringify(payload),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          method: \"POST\",\n          credentials: \"include\"\n        });\n        return yield respuestaRaw.json();\n      })();\n    }\n    formdata(ruta, payload) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        const respuestaRaw = yield fetch(_this2.rutaServidor + ruta, {\n          body: payload,\n          method: \"POST\"\n        });\n        return yield respuestaRaw.json();\n      })();\n    }\n    get(ruta) {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        // Por defecto se hace una petición GET\n        const respuestaRaw = yield fetch(_this3.rutaServidor + ruta, {\n          credentials: \"include\"\n        });\n        return yield respuestaRaw.json();\n      })();\n    }\n    delete(ruta) {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        const respuestaRaw = yield fetch(_this4.rutaServidor + ruta, {\n          credentials: \"include\",\n          method: \"DELETE\"\n        });\n        return yield respuestaRaw.json();\n      })();\n    }\n    static #_ = this.ɵfac = function HttpService_Factory(t) {\n      return new (t || HttpService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: HttpService,\n      factory: HttpService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return HttpService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}